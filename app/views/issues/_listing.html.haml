- if issues.empty?
  = t('issue.empty')

- else
  .pull-left.paginate
    = [issues.total_count.to_s, t('model.issue').downcase].join(" ")
    = paginate issues

  %table.table.table-striped.table-hover
    %tr
      %th= t('issue.report_date')
      %th= t('issue.status_id')
      %th= t('issue.description')
      %th= t('issue.created_by_id')
      %th= t('issue.followed_by_id')
      %th= t('issue.device_id')
      %th= t('issue.application')
      %th= t('issue.acts')
      %th
    %tbody
      - issues.each do |issue|
        %tr
          %td= issue.report_date 
          %td= issue.status.name 
          %td= issue.description.truncate(40, :omission => "...") unless issue.description.nil?
          %td= issue.creator.name
          %td= issue.follower.name
          %td= issue.device.name unless issue.device.nil?
          %td= issue.application
          %td= issue.acts.count
          %td
            .row
              = link_to issue, class: 'btn btn-default', title: t('issue.show') do
                %span.fa.fa-eye
              = link_to issue_acts_path(issue), class: 'btn btn-default', title: t('issue.actions') do
                %span.fa.fa-flag-checkered
            .row
              = link_to edit_issue_path(issue), class: 'btn btn-default', title: t('issue.edit') do
                %span.fa.fa-edit
              - if current_user.admin
                = link_to issue_path(issue), class: 'btn btn-default', title: t('issue.destroy'), method: :delete, data: { confirm: t('issue.confirm_destroy') } do
                  %span.fa.fa-trash-o

    = paginate issues

